@inherits LayoutComponentBase
@using ObjectLibrary.BusinessObjects
@using ObjectLibrary.Enumerations
@using DataJuggler.BlazorGallery.Pages
@using DataJuggler.Blazor.Components
@using DataJuggler.Blazor.Components.Interfaces
@using DataJuggler.Blazor.FileUpload
@using BlazorStyled
@using DataJuggler.BlazorGallery.Components
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@inject ProtectedLocalStorage ProtectedLocalStore

<PageTitle>Blazor Gallery</PageTitle>

<Styled @bind-Classname=@NewFolderStyle>
    border: none;
    width: 280px;
    height: 32px;
    background-size: 100% 100%;
    background-color: transparent;
    position: fixed;
    top: @NewFolderTopStyle;
    left: 10.8%;
</Styled>
<Styled @bind-Classname=@AddButtonStyle>
    background-image: url('../Images/AddButton.png');
    border: none;
    width: 2.55vw;
    height: 4.35vh;
    background-size: 100% 100%;
    background-color: transparent;    
    position: fixed;
    top: @AddButtonTopStyle;
    left: 16.8%;
</Styled>
<Styled @bind-Classname=@BlueButton>
    background-image: url('../Images/UploadButtonBlue.png');
    position: fixed;        
    left: 2vw;
    top: @TopStyle;
    background-size: 100% 100%;
    width: @ButtonWidthStyle;
    height: @ButtonHeightStyle;
    cursor: pointer;
</Styled>
<Styled @bind-Classname="@CheckMarkContainerStyle">
    position: fixed;
    top: @CheckMarkTopStyle;
    float: left;
    height: 32px;
    min-height: 32px;
    width: 32px;
    left: 1px;    
</Styled>
<Styled @bind-Classname="@CheckMarkStyle">
    width: 32px;
    height: 32px;
    min-height: 32px;
    position: relative;
    top: 0px;
    left: 0px;    
    background-size: 100% 100%;
    background-image: url(@CheckMarkImage);
    z-index: 120;
</Styled>
<Styled @bind-Classname="@LoginButtonStyle">
    background-image: url('../Images/LoginButton.png');
    position: relative;
    left: 0;
    top: 0;
    background-size: 100% 100%;
    width: @ButtonWidthStyle;
    height: @ButtonHeightStyle;
    cursor: pointer;
    background-color: transparent;
    border: none;
</Styled>
<Styled @bind-Classname="@JoinButtonStyle">
    background-image: url('../Images/JoinButton.png');
    position: relative;
    left: 0;
    top: 0;
    background-size: 100% 100%;
    width: @ButtonWidthStyle;
    height: @ButtonHeightStyle;
    cursor: pointer;
    background-color: transparent;
    border: none;
</Styled>
<Styled @bind-Classname="@CancelButtonStyle">
    background-image: url('../Images/CancelButton.png');
    position: relative;
    left: 0;
    top: 0;
    background-size: 100% 100%;
    width: @ButtonWidthStyle;
    height: @ButtonHeightStyle;
    cursor: pointer;
    background-color: transparent;
    border: none;
</Styled>
<Styled @bind-Classname="@NoButtonStyle">
    background-image: url('../Images/NoButton.png');
    position: relative;
    left: 0;
    top: 0px;
    background-size: 100% 100%;
    width: @SmallButtonWidthStyle;
    height: @ButtonHeightStyle;
    cursor: pointer;
    background-color: transparent;
    border: none;
</Styled>
<Styled @bind-Classname="@YesButtonStyle">
    background-image: url('../Images/YesButton.png');
    position: relative;
    left: 0;
    top: 0px;
    background-size: 100% 100%;
    width: @SmallButtonWidthStyle;
    height: @ButtonHeightStyle;
    cursor: pointer;
    background-color: transparent;
    border: none;
</Styled>
<Styled @bind-Classname="@SignOutButtonStyle">
    background-image: url('../Images/SignOutButton.png');
    position: relative;
    left: 8px;
    top: 8px;
    background-size: 100% 100%;
    width: @ButtonWidthStyle;
    height: @ButtonHeightStyle;
    cursor: pointer;
    background-color: transparent;
    border: none;
</Styled>
<Styled @bind-Classname="@SendButtonStyle">
    background-image: url('../Images/SendButton.png');
    position: relative;
    left: 0px;
    top: 0px;
    background-size: 100% 100%;
    width: @ButtonWidthStyle;
    height: @ButtonHeightStyle;
    cursor: pointer;
    background-color: transparent;
    border: none;
</Styled>
<Styled @bind-Classname="@VerifyButtonStyle">
    background-image: url('../Images/Verify.png');
    position: relative;
    left: 18px;
    top: 28px;
    background-size: 100% 100%;
    width: @ButtonWidthStyle;
    height: @ButtonHeightStyle;
    cursor: pointer;
    background-color: transparent;
    border: none;
</Styled>
<Styled @bind-Classname="@SaveButtonStyle">
    background-image: url('../Images/SaveButton.png');
    position: relative;
    left: 0;
    top: 0;
    background-size: 100% 100%;
    width: @ButtonWidthStyle;
    height: @ButtonHeightStyle;
    cursor: pointer;
    background-color: transparent;
    border: none;
</Styled>
<Styled @bind-Classname="@SaveButtonDisabledStyle">
    background-image: url('../Images/SaveButtonDisabled.png');
    position: relative;
    left: 0;
    top: 0;
    background-size: 100% 100%;
    width: @ButtonWidthStyle;
    height: @ButtonHeightStyle;    
    background-color: transparent;
    border: none;
</Styled>

<div class="page">
    @if (!HasLoggedInUser)
    {
        @if (ScreenType == ScreenTypeEnum.Login)
        {
            <Login Parent=this></Login>
        }
        else if (ScreenType == ScreenTypeEnum.SignUp)
        {
            <Join Parent=this></Join>
        }
        @if (ScreenType != ScreenTypeEnum.ViewImage)
        {
            <div class="topright">
                <button class="@LoginButtonStyle" title="Login with your UserName or email address and password." @onclick="Login"></button>
                <button class="@JoinButtonStyle" title="Sign up to create your own gallery." @onclick="Join"></button>
            </div>
        }
    }
    @if ((HasGalleryOwner) && (ScreenType == ScreenTypeEnum.ViewingGallery))
    {
        @if (HasSelectedFolder)
        {
            if ((!HasLoggedInUser) || (!LoggedInUser.IsGalleryOwner))
            {
                <h5 class="topleft">Viewing Gallery @GalleryOwner.UserName/@SelectedFolder.Name</h5>
            }
        }
    }
    @if ((HasLoggedInUser) && (!LoggedInUser.ViewOnlyMode))
    {
        <div class="topright">
            Welcome @LoggedInUser.Name
            <button class="@SignOutButtonStyle" @onclick=SignOut></button>
        </div>        
    }
    <div class="fixedsidebar">
        <div class="logo"></div>
        @if (ScreenType == ScreenTypeEnum.MainScreen)
        {
            <button class="mainimagefolder" @onclick="NavigateToMain"><span class="foldernametext colortomato fontsite">Main Gallery</span></button>
            @if ((HasLoggedInUser) && (!LoggedInUser.ViewOnlyMode))
            {
                <button class="backtousershome" @onclick="NavigateToUsersGalleries"><span class="foldernametext colorgray204 fontsite">@LoggedInUser.UserName</span></button>
            }
        }
        else
        {
            <button class="mainimagefolder" @onclick="NavigateToMain"><span class="foldernametext colorgray204 fontsite">Main Gallery</span></button>
        }        
        @if ((HasGalleryOwner) && ((ScreenType == ScreenTypeEnum.Index) || (ScreenType == ScreenTypeEnum.ViewingGallery)))
        {
            <div class="folders">
                <div class="folderstext fontsite">
                    Folders
                </div>
                <div class="height8"></div>
                @if (HasFolders)
                {
                    int buttonNumber = 0;
                    string folderClassName = "";

                    foreach (Folder folder in Folders)
                    {
                        buttonNumber++;
                        folderClassName = "imagefolder" + buttonNumber;

                        <div class="nav-item px-3">
                            <FolderComponent ButtonNumber="@buttonNumber" Folder="@folder"  Parent="this"></FolderComponent>                            
                        </div>
                        <div class="height16 displayblock"></div>
                    }                
                }
            </div>
            @if ((HasLoggedInUser) && (LoggedInUser.IsGalleryOwner) && (HasFolders) && (Folders.Count < Admin.MaxFolderCount))
            {
                <button class="@AddButtonStyle" title="Add A New Folder" @onclick=AddFolder></button>
            }
            @if (AddFolderMode)
            {
                <div class="@NewFolderStyle">
                    <ValidationComponent Name="NewFolderNameComponent" Parent="this" LabelTop="8" Unit="px"
                        LabelClassName="displayinlineblock colorgray204 left2" SetFocusOnFirstRender="true" Width="260"                         
                        Column1Width="40" Column2Width="200" HeightUnit="px" Height=24 Caption="Name:"
                        Left="-80" Top="32">                        
                    </ValidationComponent>
                </div>
            }
            @if ((HasLoggedInUser) && (LoggedInUser.IsGalleryOwner) && (HasSelectedFolder) && (HasAdmin) && (SelectedFolder.ImagesCount < Admin.MaxImagesPerFolder) && (!LoggedInUser.ViewOnlyMode) && (LoggedInUser.AcceptedTermsOfServiceDate.Year > 2000) && ((LoggedInUser.EmailVerified) || (!Admin.RequireEmailVerification)))
            {
                <FileUpload CustomSuccessMessage="Your file uploaded successfully." Parent="this"
                    OnReset="OnReset" ShowStatus="false"
                    PartialGuidLength="12" MaxFileSize=@UploadLimit FilterByExtension="true"
                    ShowCustomButton="true" OnChange="OnFileUploaded" Visible="false"
                    CustomButtonClassName="@BlueButton" AllowedExtensions=".jpg,.png"
                    ShowResetButton="false" AppendPartialGuid="true" ButtonText=""
                    CustomExtensionMessage="Only .png and .jpg extensions are allowed." MultipleFiles="true"
                    InputFileClassName="customfileupload" Status="Refresh" ResetButtonText=""
                    FileTooLargeMessage=@FileTooLargeMessage>
                </FileUpload>
            }
            <div class="@CheckMarkContainerStyle">
                <div class="@CheckMarkStyle"></div>
            </div>
            <div>
                <ConfirmationComponent Parent="this" Visible="@ShowConfirmation"></ConfirmationComponent>
            </div>
        }
        <div class="sidebarfooter">Version 1.5.9</div>
    </div>
    <main>
        <article class="content px-4">
            @if (ScreenType == ScreenTypeEnum.Index)
            {
                <div class="topleft">
                    @if (HasValidationMessage)
                    {
                        @ValidationMessage
                    }                    
                </div>
                <Index Parent="this"></Index>
            }
            else if (ScreenType == ScreenTypeEnum.ViewingGallery)
            {
                <div class="topleft">
                    @if (HasValidationMessage)
                    {
                        @ValidationMessage
                    }
                </div>
                <Gallery Parent="this"></Gallery>
            }
            else if (ScreenType == ScreenTypeEnum.MainScreen)
            {
                <MainGalleryComponent Parent="this"></MainGalleryComponent>                
            }
            else if (ScreenType == ScreenTypeEnum.TermsOfservice)
            {
                <TermsOfServiceComponent Parent="this" Prompt="Do you agree to these terms?"></TermsOfServiceComponent>
            }
            else if (ScreenType == ScreenTypeEnum.SetProfileVisibility)
            {
                <ProfileVisibility Parent="this" Prompt="Make your profile public?"></ProfileVisibility>
            }
            else if ((screenType == ScreenTypeEnum.ViewImage) || (screenType == ScreenTypeEnum.ViewImageInMainGallery))
            {
                <FullScreenImageViewer Parent="this" Image=@SelectedImage></FullScreenImageViewer>
            }
            else if (screenType == ScreenTypeEnum.EmailVerification)
            {
                <EmailVerification Parent="this" Name="EmailComponent" Email="@LoggedInUser.EmailAddress"></EmailVerification>
            }
            else if (screenType == ScreenTypeEnum.ChangePasswordMode)
            {
                <ChangePasswordComponent Parent="this" Name="ChangePasswordComponent"></ChangePasswordComponent>
            }
            else if (screenType == ScreenTypeEnum.Feedback)
            {
                <FeedbackComponent Parent="this" Name="FeedbackComponent"></FeedbackComponent>
            }
        </article>        
    </main>
    @if ((HasLoggedInUser) && (ScreenType != ScreenTypeEnum.Feedback))
    {
        <button class="feedback" @onclick="GiveFeedback"></button>
    }
</div>