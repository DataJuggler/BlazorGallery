@inherits LayoutComponentBase
@using ObjectLibrary.BusinessObjects
@using ObjectLibrary.Enumerations
@using DataJuggler.Blazor.Components
@using DataJuggler.Blazor.Components.Interfaces
@using DataJuggler.Blazor.FileUpload
@using BlazorStyled
@using DataJuggler.BlazorGallery.Components
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@inject ProtectedLocalStorage ProtectedLocalStore

<PageTitle>Blazor Gallery</PageTitle>

<Styled @bind-Classname=@BlueButton>
    background-image: url('../Images/UploadButtonBlue.png');
    position: fixed;        
    left: 2%;
    top: @TopStyle;
    background-size: 100% 100%;
    width: 120px;
    height: 32px;
    cursor: pointer;
</Styled>
<Styled @bind-Classname=@ResetButton>
    background-image: url('../Images/ResetButtonBlue.png');
    position: absolute;
    left: 2%;
    top: @TopStyle;
    background-size: 100% 100%;
    width: 120px;
    height: 32px;
    cursor: pointer;
    border: none;
    background-color: transparent;
</Styled>
<Styled @bind-Classname="@CheckMarkContainerStyle">
    position: relative;
    top: @CheckMarkTopStyle;
    float: left;
    height: 32px;
    min-height: 32px;
    width: 32px;
    left: 1px;    
</Styled>
<Styled @bind-Classname="@CheckMarkStyle">
    width: 32px;
    height: 32px;
    min-height: 32px;
    position: relative;
    top: 0px;
    left: 0px;    
    background-size: 100% 100%;
    background-image: url(@CheckMarkImage);
    z-index: 120;
</Styled>

<div class="page">
    @if ((!HasLoggedInUser) || (LoggedInUser.ViewOnlyMode))
    {
        @if (ScreenType == ScreenTypeEnum.Login)
        {
            <Login Parent=this></Login>
        }
        else if (ScreenType == ScreenTypeEnum.SignUp)
        {
            <Join Parent=this></Join>
        }        
        else
        {
            @if ((HasLoggedInUser) && (LoggedInUser.ViewOnlyMode))
            {
                @if (HasSelectedFolder)
                {
                    <h5 class="topleft">Viewing Gallery @LoggedInUser.Name/@SelectedFolder.Name</h5>
                }
            }
            <div class="topright">
                <button class="loginbutton" title="Login with your UserName or email address and password." @onclick="Login"></button>
                <button class="joinbutton" title="Sign up to create your own gallery." @onclick="Join"></button>
            </div>
        }
    }
    <div class="fixedsidebar">
        <div class="logo"></div>           
        @if (HasLoggedInUser)
        {
            <div class="folders down16">
                <div class="colornavy fontbold right32 fontsize18">
                    Folders
                </div>
                <div class="height8"></div>
                @if (HasFolders)
                {
                    int buttonNumber = 0;

                    foreach (Folder folder in Folders)
                    {  
                        buttonNumber++;

                        <div class="nav-item px-3">
                        <button class="copybutton down16 right16" title="Copy This Folder's URL'" @onclick="() => CopyFolder(folder.Id, buttonNumber)"></button>                            
                        @if ((folder.Name != "Home") && (folder.UserId == LoggedInUser.Id) && (!LoggedInUser.ViewOnlyMode))
                        {
                            <button class="removebutton down16 right16" title="Remove This Folder" @onclick="() => DeleteFolder(folder.Id)"></button>
                        }
                        else
                        {
                            <div class="displayinlineblock width16"></div>
                        }
                        @if (folder.Selected)
                        {
                            <button class="imagefolder right16"><span class="fontsize14 colorfirebrick fontbold right56 text-nowrap">@folder.Name</span></button>
                        }
                        else
                        {
                            <button class="imagefolder right16" @onclick="() => FolderSelected(folder.Id)"><span class="fontsize14 text-nowrap colornavy right56 fontbold">@folder.Name</span></button>
                        }
                    </div>
                    <div class="height16 displayblock"></div>
                }
            }
            </div>
            @if ((HasFolders) && (Folders.Count < Admin.MaxFolderCount) && (!LoggedInUser.ViewOnlyMode))
            {
                <button class="addbutton" title="Add A New Folder" @onclick=AddFolder></button>
            }
            @if (AddFolderMode)
            {
                <div class="down32">
                    <ValidationComponent Name="NewFolderNameComponent" Parent="this" LabelTop="8"
                        SetFocusOnFirstRender="true" Unit="px"
                        Width="164" Caption="Name:"  LabelWidth="80"></ValidationComponent>
                </div>
            }
            @if ((HasSelectedFolder) && (HasAdmin) && (SelectedFolder.ImagesCount < Admin.MaxImagesPerFolder) && (!LoggedInUser.ViewOnlyMode))
            {
                <FileUpload CustomSuccessMessage="Your file uploaded successfully." Parent="this"
                    OnReset="OnReset" ResetButtonClassName="@ResetButton" ShowStatus="false"
                    PartialGuidLength="12" MaxFileSize=@UploadLimit FilterByExtension="true"
                    ShowCustomButton="true" OnChange="OnFileUploaded" Visible="false"
                    CustomButtonClassName="@BlueButton" AllowedExtensions=".jpg,.png"
                    ShowResetButton="false" AppendPartialGuid="true" ButtonText=""
                    CustomExtensionMessage="Only .png and .jpg extensions are allowed."
                    InputFileClassName="customfileupload" Status="Refresh" ResetButtonText=""
                    FileTooLargeMessage=@FileTooLargeMessage>
                </FileUpload>
            }
            <div class="@CheckMarkContainerStyle">
                <div class="@CheckMarkStyle"></div>
            </div>
            <div>
                <ConfirmationComponent Parent="this" Visible="@ShowConfirmation"></ConfirmationComponent>
            </div>
        }        
    </div>
    <main>
        <article class="content px-4">
            @if ((ScreenType == ScreenTypeEnum.Index) || (ScreenType == ScreenTypeEnum.MainScreen))
            {
                <div class="topleft">
                    @if (HasValidationMessage)
                    {
                        @ValidationMessage
                    }                    
                </div>
                <DataJuggler.BlazorGallery.Pages.Index Parent="this"></DataJuggler.BlazorGallery.Pages.Index>
            }
            else if  (ScreenType == ScreenTypeEnum.TermsOfservice)
            {
                <TermsOfServiceComponent Parent="this" Prompt="Do you access these terms?"></TermsOfServiceComponent>
            }
        </article>
    </main>
</div>